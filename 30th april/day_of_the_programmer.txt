#include <bits/stdc++.h>
#include<sstream>

using namespace std;

string ltrim(const string &);
string rtrim(const string &);

/*
 * Complete the 'dayOfProgrammer' function below.
 *
 * The function is expected to return a STRING.
 * The function accepts INTEGER year as parameter.
 */

string dayOfProgrammer(int year) {
    string leap_gre_1918 = "12.09.";
    string non_leap_gre_1918 = "13.09.";
    string leap_less_1918 = "12.09.";
    string non_leap_less_1918 = "13.09.";
    stringstream ss;
    ss << year;
    string s_year;
    ss >> s_year;
    if(year > 1918){
        if((year%400 == 0) || ((year%4 == 0)&&(year%100 != 0))){
            // year = string(year);
            leap_gre_1918.append(s_year);
            return(leap_gre_1918);
        }
        
        else{
            non_leap_gre_1918.append(s_year);
            return(non_leap_gre_1918);
        }
    }
    
    else if(year == 1918){
        string year_1918 = "26.09.1918";
        return(year_1918);
    }
    
    else{
        if((year%4) == 0){
            leap_less_1918.append(s_year);
            return(leap_less_1918);
        }
        else{
            non_leap_less_1918.append(s_year);
            return(non_leap_less_1918);
        }
    }
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    string year_temp;
    getline(cin, year_temp);

    int year = stoi(ltrim(rtrim(year_temp)));

    string result = dayOfProgrammer(year);

    fout << result << "\n";

    fout.close();

    return 0;
}

string ltrim(const string &str) {
    string s(str);

    s.erase(
        s.begin(),
        find_if(s.begin(), s.end(), not1(ptr_fun<int, int>(isspace)))
    );

    return s;
}

string rtrim(const string &str) {
    string s(str);

    s.erase(
        find_if(s.rbegin(), s.rend(), not1(ptr_fun<int, int>(isspace))).base(),
        s.end()
    );

    return s;
}
